[{"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/store.js":"1","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/App.js":"2","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/auth.js":"3","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/auth.js":"4","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Login.js":"5","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/subreddit.js":"6","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Navbar.js":"7","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Register.js":"8","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/index.js":"9","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/types.js":"10","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/subreddit.js":"11","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/index.js":"12","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Landing.js":"13","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/dashboard/DashboardTable.js":"14","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/dashboard/Dashboard.js":"15","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/profile/Settings.js":"16","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/profile.js":"17"},{"size":381,"mtime":1608232226144,"results":"18","hashOfConfig":"19"},{"size":1093,"mtime":1614200216075,"results":"20","hashOfConfig":"19"},{"size":2464,"mtime":1614025263585,"results":"21","hashOfConfig":"19"},{"size":1055,"mtime":1614025106685,"results":"22","hashOfConfig":"19"},{"size":1462,"mtime":1611018270586,"results":"23","hashOfConfig":"19"},{"size":1504,"mtime":1610574862621,"results":"24","hashOfConfig":"19"},{"size":740,"mtime":1613601851307,"results":"25","hashOfConfig":"19"},{"size":1781,"mtime":1611018205109,"results":"26","hashOfConfig":"19"},{"size":164,"mtime":1608596091322,"results":"27","hashOfConfig":"19"},{"size":764,"mtime":1614022082386,"results":"28","hashOfConfig":"19"},{"size":1781,"mtime":1614040029322,"results":"29","hashOfConfig":"19"},{"size":197,"mtime":1606953285248,"results":"30","hashOfConfig":"19"},{"size":408,"mtime":1617037321499,"results":"31","hashOfConfig":"19"},{"size":1014,"mtime":1614021889940,"results":"32","hashOfConfig":"19"},{"size":2148,"mtime":1614055433534,"results":"33","hashOfConfig":"19"},{"size":1611,"mtime":1614055094474,"results":"34","hashOfConfig":"19"},{"size":848,"mtime":1614023175200,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"aii0fv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/store.js",[],["77","78"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/App.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/auth.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/auth.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Login.js",[],["79","80"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/subreddit.js",[],["81","82"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Navbar.js",[],["83","84"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Register.js",[],["85","86"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/index.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/types.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/subreddit.js",["87"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/index.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Landing.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/dashboard/DashboardTable.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/dashboard/Dashboard.js",["88"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  submitSubredditInfo,\n  fetchUserSubreddits,\n} from '../../actions/subreddit';\nimport DashboardTable from './DashboardTable';\n\nconst Dashboard = ({\n  submitSubredditInfo,\n  fetchUserSubreddits,\n  subredditState: { subreddits },\n  authState: {\n    loggedInUser: { id, username },\n    isAuthenticated,\n  },\n}) => {\n  // need to populate the redux state using useEffect before rendering dashboard.\n  useEffect(() => {\n    fetchUserSubreddits(id);\n  }, []);\n\n  const [formData, setFormData] = useState({\n    subredditName: '',\n    subredditKeywords: '',\n  });\n\n  const { subredditName, subredditKeywords } = formData;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    submitSubredditInfo({ id, subredditName, subredditKeywords });\n  };\n\n  const handleSubredditName = (e) => {\n    setFormData({\n      ...formData,\n      subredditName: e.target.value,\n    });\n  };\n\n  const handleSubredditKeywords = (e) => {\n    setFormData({\n      ...formData,\n      subredditKeywords: e.target.value,\n    });\n  };\n\n  const displaySubredditTables = () => {\n    return subreddits.map((subreddit) => (\n      <DashboardTable subreddit={subreddit} />\n    ));\n  };\n\n  if (!isAuthenticated) {\n    return <Redirect to='/register' />;\n  }\n\n  return (\n    <Fragment>\n      <h1>ReddAlerts</h1>\n      <h3>Subreddits To Monitor</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='Subreddit'\n          value={subredditName}\n          onChange={handleSubredditName}\n        />\n        <input\n          type='text'\n          placeholder='Keywords'\n          value={subredditKeywords}\n          onChange={handleSubredditKeywords}\n        />\n        <input type='submit' value='Submit' />\n        {displaySubredditTables()}\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  subredditState: state.subreddit,\n  authState: state.auth,\n});\n\nexport default connect(mapStateToProps, {\n  submitSubredditInfo,\n  fetchUserSubreddits,\n})(Dashboard);\n","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/profile/Settings.js",[],["89","90"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/profile.js",["91","92","93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"94","replacedBy":"100"},{"ruleId":"96","replacedBy":"101"},{"ruleId":"94","replacedBy":"102"},{"ruleId":"96","replacedBy":"103"},{"ruleId":"94","replacedBy":"104"},{"ruleId":"96","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":7,"column":3,"nodeType":"108","messageId":"109","endLine":7,"endColumn":24},{"ruleId":"110","severity":1,"message":"111","line":22,"column":6,"nodeType":"112","endLine":22,"endColumn":8,"suggestions":"113"},{"ruleId":"94","replacedBy":"114"},{"ruleId":"96","replacedBy":"115"},{"ruleId":"106","severity":1,"message":"116","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":29},{"ruleId":"106","severity":1,"message":"117","line":17,"column":11,"nodeType":"108","messageId":"109","endLine":17,"endColumn":14},{"ruleId":"106","severity":1,"message":"117","line":28,"column":11,"nodeType":"108","messageId":"109","endLine":28,"endColumn":14},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],["118"],["119"],["118"],["119"],["118"],["119"],"no-unused-vars","'DELETE_SUBREDDIT_FAIL' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUserSubreddits' and 'id'. Either include them or remove the dependency array. If 'fetchUserSubreddits' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["120"],["118"],["119"],"'SUBMIT_PHONE_NUMBER' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [fetchUserSubreddits, id]",{"range":"123","text":"124"},[605,607],"[fetchUserSubreddits, id]"]