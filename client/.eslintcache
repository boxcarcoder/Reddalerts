[{"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/App.js":"1","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/index.js":"2","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Landing.js":"3","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Register.js":"4","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Login.js":"5","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/auth.js":"6","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/store.js":"7","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/auth.js":"8","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/index.js":"9","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/types.js":"10","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/subreddit.js":"11","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Dashboard.js":"12","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/subreddit.js":"13","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/DashboardTable.js":"14","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Navbar.js":"15"},{"size":901,"mtime":1608657576916,"results":"16","hashOfConfig":"17"},{"size":197,"mtime":1606953285248,"results":"18","hashOfConfig":"17"},{"size":293,"mtime":1609288219143,"results":"19","hashOfConfig":"17"},{"size":1695,"mtime":1609203475370,"results":"20","hashOfConfig":"17"},{"size":1373,"mtime":1608567983321,"results":"21","hashOfConfig":"17"},{"size":740,"mtime":1608246156707,"results":"22","hashOfConfig":"17"},{"size":381,"mtime":1608232226144,"results":"23","hashOfConfig":"17"},{"size":1430,"mtime":1608599522029,"results":"24","hashOfConfig":"17"},{"size":164,"mtime":1608596091322,"results":"25","hashOfConfig":"17"},{"size":432,"mtime":1608680578648,"results":"26","hashOfConfig":"17"},{"size":1099,"mtime":1609350196188,"results":"27","hashOfConfig":"17"},{"size":1993,"mtime":1609350242307,"results":"28","hashOfConfig":"17"},{"size":1315,"mtime":1609293542505,"results":"29","hashOfConfig":"17"},{"size":388,"mtime":1608663823455,"results":"30","hashOfConfig":"17"},{"size":537,"mtime":1609287743941,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"aii0fv",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/App.js",[],["68","69"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/index.js",[],["70","71"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Landing.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Register.js",[],["72","73"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Login.js",[],["74","75"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/auth.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/store.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/auth.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/index.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/types.js",[],["76","77"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/subreddit.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Dashboard.js",["78","79"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  submitSubredditInfo,\n  fetchUserSubreddits,\n} from '../../actions/subreddit';\nimport DashboardTable from './DashboardTable';\n\nconst Dashboard = ({\n  submitSubredditInfo,\n  fetchUserSubreddits,\n  subredditState: { subreddits },\n}) => {\n  // need to populate the redux state using useEffect before rendering dashboard.\n  useEffect(() => {\n    console.log('useEffect: calling fetchUserSubreddits()');\n    fetchUserSubreddits();\n  }, []);\n\n  const [formData, setFormData] = useState({\n    subredditName: '',\n    subredditKeywords: '',\n  });\n\n  const { subredditName, subredditKeywords } = formData;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    submitSubredditInfo({ subredditName, subredditKeywords });\n  };\n\n  const handleSubredditName = (e) => {\n    setFormData({\n      ...formData,\n      subredditName: e.target.value,\n    });\n  };\n\n  const handleSubredditKeywords = (e) => {\n    setFormData({\n      ...formData,\n      subredditKeywords: e.target.value,\n    });\n  };\n\n  const displaySubredditTables = () => {\n    return subreddits.map((subreddit) => (\n      <DashboardTable subreddit={subreddit} />\n    ));\n  };\n\n  return (\n    <Fragment>\n      <h1>Reddalerts</h1>\n      <h3>Subreddits To Monitor</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='Subreddit'\n          value={subredditName}\n          onChange={handleSubredditName}\n        />\n        <input\n          type='text'\n          placeholder='Keywords'\n          value={subredditKeywords}\n          onChange={handleSubredditKeywords}\n        />\n        <input type='submit' value='Submit' />\n        {/* {displaySubredditTables()} */}\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  subredditState: state.subreddit,\n});\n\nexport default connect(mapStateToProps, {\n  submitSubredditInfo,\n  fetchUserSubreddits,\n})(Dashboard);\n","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/subreddit.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/DashboardTable.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Navbar.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"80","replacedBy":"86"},{"ruleId":"82","replacedBy":"87"},{"ruleId":"80","replacedBy":"88"},{"ruleId":"82","replacedBy":"89"},{"ruleId":"80","replacedBy":"90"},{"ruleId":"82","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":18,"column":6,"nodeType":"94","endLine":18,"endColumn":8,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":46,"column":9,"nodeType":"98","messageId":"99","endLine":46,"endColumn":31},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],["100"],["101"],["100"],["101"],["100"],["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUserSubreddits'. Either include it or remove the dependency array. If 'fetchUserSubreddits' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["102"],"no-unused-vars","'displaySubredditTables' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [fetchUserSubreddits]",{"range":"105","text":"106"},[542,544],"[fetchUserSubreddits]"]