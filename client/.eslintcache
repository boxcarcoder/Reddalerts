[{"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/store.js":"1","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/App.js":"2","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/auth.js":"3","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/auth.js":"4","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Login.js":"5","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/DashboardTable.js":"6","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/subreddit.js":"7","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Navbar.js":"8","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Register.js":"9","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/index.js":"10","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Dashboard.js":"11","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/types.js":"12","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/subreddit.js":"13","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/index.js":"14","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Landing.js":"15"},{"size":381,"mtime":1608232226144,"results":"16","hashOfConfig":"17"},{"size":971,"mtime":1609286152107,"results":"18","hashOfConfig":"17"},{"size":1430,"mtime":1610471998306,"results":"19","hashOfConfig":"17"},{"size":776,"mtime":1610061232721,"results":"20","hashOfConfig":"17"},{"size":1373,"mtime":1608567983321,"results":"21","hashOfConfig":"17"},{"size":1024,"mtime":1610759709908,"results":"22","hashOfConfig":"17"},{"size":1504,"mtime":1610574862621,"results":"23","hashOfConfig":"17"},{"size":570,"mtime":1609287952662,"results":"24","hashOfConfig":"17"},{"size":1695,"mtime":1609203475370,"results":"25","hashOfConfig":"17"},{"size":164,"mtime":1608596091322,"results":"26","hashOfConfig":"17"},{"size":2019,"mtime":1610574675162,"results":"27","hashOfConfig":"17"},{"size":616,"mtime":1610574855653,"results":"28","hashOfConfig":"17"},{"size":1859,"mtime":1610992567274,"results":"29","hashOfConfig":"17"},{"size":197,"mtime":1606953285248,"results":"30","hashOfConfig":"17"},{"size":293,"mtime":1609288219143,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"aii0fv",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/store.js",[],["66","67"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/App.js",[],["68","69"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/auth.js",[],["70","71"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/auth.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Login.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/DashboardTable.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/subreddit.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Navbar.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/auth/Register.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/index.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Dashboard.js",["72"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  submitSubredditInfo,\n  fetchUserSubreddits,\n} from '../../actions/subreddit';\nimport DashboardTable from './DashboardTable';\n\nconst Dashboard = ({\n  submitSubredditInfo,\n  fetchUserSubreddits,\n  subredditState: { subreddits },\n  authState: {\n    loggedInUser: { username },\n  },\n}) => {\n  // need to populate the redux state using useEffect before rendering dashboard.\n  useEffect(() => {\n    fetchUserSubreddits(username);\n  }, []);\n\n  const [formData, setFormData] = useState({\n    subredditName: '',\n    subredditKeywords: '',\n  });\n\n  const { subredditName, subredditKeywords } = formData;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    submitSubredditInfo({ username, subredditName, subredditKeywords });\n  };\n\n  const handleSubredditName = (e) => {\n    setFormData({\n      ...formData,\n      subredditName: e.target.value,\n    });\n  };\n\n  const handleSubredditKeywords = (e) => {\n    setFormData({\n      ...formData,\n      subredditKeywords: e.target.value,\n    });\n  };\n\n  const displaySubredditTables = () => {\n    return subreddits.map((subreddit) => (\n      <DashboardTable subreddit={subreddit} />\n    ));\n  };\n\n  return (\n    <Fragment>\n      <h1>Reddalerts</h1>\n      <h3>Subreddits To Monitor</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='Subreddit'\n          value={subredditName}\n          onChange={handleSubredditName}\n        />\n        <input\n          type='text'\n          placeholder='Keywords'\n          value={subredditKeywords}\n          onChange={handleSubredditKeywords}\n        />\n        <input type='submit' value='Submit' />\n        {displaySubredditTables()}\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  subredditState: state.subreddit,\n  authState: state.auth,\n});\n\nexport default connect(mapStateToProps, {\n  submitSubredditInfo,\n  fetchUserSubreddits,\n})(Dashboard);\n","/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/types.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/subreddit.js",["73"],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/index.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Landing.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"74","replacedBy":"80"},{"ruleId":"76","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":20,"column":6,"nodeType":"84","endLine":20,"endColumn":8,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":7,"column":3,"nodeType":"88","messageId":"89","endLine":7,"endColumn":24},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],["90"],["91"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUserSubreddits' and 'username'. Either include them or remove the dependency array. If 'fetchUserSubreddits' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["92"],"no-unused-vars","'DELETE_SUBREDDIT_FAIL' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [fetchUserSubreddits, username]",{"range":"95","text":"96"},[541,543],"[fetchUserSubreddits, username]"]